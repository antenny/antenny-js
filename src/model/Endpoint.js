/**
 * Antenny API
 * This is an api that allows you to interact with the Antenny platform. It allows you to manage your clients and subscriptions.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@antenny.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Endpoint model module.
 * @module model/Endpoint
 * @version 1.3.0
 */
class Endpoint {
    /**
     * Constructs a new <code>Endpoint</code>.
     * @alias module:model/Endpoint
     * @param protocol {module:model/Endpoint.ProtocolEnum} 
     * @param url {String} 
     */
    constructor(protocol, url) { 
        
        Endpoint.initialize(this, protocol, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, protocol, url) { 
        obj['protocol'] = protocol;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>Endpoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Endpoint} obj Optional instance to populate.
     * @return {module:model/Endpoint} The populated <code>Endpoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Endpoint();

            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Endpoint.ProtocolEnum} protocol
 */
Endpoint.prototype['protocol'] = undefined;

/**
 * @member {String} url
 */
Endpoint.prototype['url'] = undefined;





/**
 * Allowed values for the <code>protocol</code> property.
 * @enum {String}
 * @readonly
 */
Endpoint['ProtocolEnum'] = {

    /**
     * value: "http"
     * @const
     */
    "http": "http"
};



export default Endpoint;

